Fetch
=====

(*http.Response)(&http.Response{
	Status:     (string)("200 OK"),
	StatusCode: (int)(200),
	Proto:      (string)(""),
	ProtoMajor: (int)(0),
	ProtoMinor: (int)(0),
	Header: (http.Header)(http.Header{
		(string)("Content-Type"): ([]string)([]string{
			(string)("text/plain"),
		}),
	}),
	Body:             (*http.streamReader)(already_shown),
	ContentLength:    (int64)(-1),
	TransferEncoding: ([]string)(nil),
	Close:            (bool)(false),
	Trailer:          (http.Header)(nil),
	Request:          (*http.Request)(already_shown),
	TLS:              (*tls.ConnectionState)(nil),
})
Method: GET
Protocol: HTTP/2.0
Host: localhost:4430
RemoteAddr: 127.0.0.1:52342
RequestURI: "/reqinfo"
URL: &url.URL{Scheme:"", Opaque:"", User:(*url.Userinfo)(nil), Host:"", Path:"/reqinfo", RawPath:"", RawQuery:"", Fragment:""}
Body.ContentLength: 0 (-1 means unknown)
Close: false (relevant for HTTP/1 only)
TLS: &tls.ConnectionState{Version:0x303, HandshakeComplete:true, DidResume:false, CipherSuite:0xc02f, NegotiatedProtocol:"h2", NegotiatedProtocolIsMutual:true, ServerName:"localhost", PeerCertificates:(*http.Response)(&http.Response{
	Status:     (string)("200 OK"),
	StatusCode: (int)(200),
	Proto:      (string)(""),
	ProtoMajor: (int)(0),
	ProtoMinor: (int)(0),
	Header: (http.Header)(http.Header{
		(string)("Content-Type"): ([]string)([]string{
			(string)("text/plain"),
		}),
	}),
	Body:             (*http.streamReader)(already_shown),
	ContentLength:    (int64)(-1),
	TransferEncoding: ([]string)(nil),
	Close:            (bool)(false),
	Trailer:          (http.Header)(nil),
	Request:          (*http.Request)(already_shown),
	TLS:              (*tls.ConnectionState)(nil),
})
# ~1KB of junk to force browsers to start rendering immediately:
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
2016-05-08 15:02:23.549511316 -0700 PDT
2016-05-08 15:02:24.550036327 -0700 PDT
2016-05-08 15:02:25.550425669 -0700 PDT
2016-05-08 15:02:26.554605211 -0700 PDT
2016-05-08 15:02:27.554618433 -0700 PDT
